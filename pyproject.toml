[tool.poetry]
name = "voice-ai-platform"
version = "0.1.0"
description = "Voice AI Platform for EMR Integration"
authors = ["Development Team <dev@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
fastapi = "0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
cryptography = "^41.0.0"
pydantic = "^2.5.0"
python-multipart = "^0.0.6"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.12.0"
flake8 = "^6.1.0"
pre-commit = "^3.6.0"
pytest-asyncio = "^0.21.0"
httpx = "^0.25.0"
isort = "^6.0.1"
pydocstyle = "^6.3.0"
mypy = "^1.18.2"
bandit = "^1.8.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src --cov-report=term-missing --cov-report=html --cov-fail-under=80"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.black]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]